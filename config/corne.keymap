/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

//#define DEFAULT 0
//#define LOWER   1
//#define RAISE   2
//#define ADJUST  3

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                tri_layer {
                        if-layers = <1 2>;
                        then-layer = <3>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |         |    Q    |    W    |    E    |    R    |    T    |         |    Y    |    U    |    I    |    O    |    P    |      |
// |         |    A    |    S    |    D    |    F    |    G    |         |    H    |    J    |    K    |    L    |    -    |      |
// |         |    Z    |    X    |    C    |    V    |    B    |         |    N    |    M    |    ,    |    .    |    /    |      |
// |         |   ALT   |         |         |         |         |         |         |         |         |         |   ALT   |      |
//                               |   TAB   |  無変換  |  SPACE  |         |   ENT   |   変換   |  BKSP   |
//                               |   LCTRL |   LWR   |  SHIFT  |         |   ALT   |   RSE   |         |

                        bindings = <
   &none   &kp Q        &kp W     &kp E     &kp R     &kp T               &kp Y     &kp U     &kp I     &kp O     &kp P          &none
   &none   &kp A        &kp S     &kp D     &kp F     &kp G               &kp H     &kp J     &kp K     &kp L     &kp MINUS      &none
   &none   &mt LALT Z   &kp X     &kp C     &kp V     &kp B               &kp N     &kp M     &kp COMMA &kp DOT   &mt LALT FSLH  &none
                        &mt LCTRL TAB &lt 1 INT5 &mt LSHFT SPC         &mt LGUI RET &lt 2 INT4 &kp BSPC
                        >;
                };
                lower_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |         |    !    |  @ ([)  |    #    |    $    |    %    |         |   ^ (=) |   & (^) |   ~ (+) |   = (_) ||(S Int3)|      |
// |         |  ( (*)  |  ) (()  |   { (}) |  } (|)  |   " (@) |         |   + (:) |   * (") |    ;    |   : (') | ¥ (Int3)|      |
// |         |  <      |  >      |   [ (]) |  ] (¥)  |   ' (&) |         |   -     |    /    |    ,    |    .    |_(S Int1)|      |
//                               |   TAB   |  無変換  |  SPACE  |         |   ENT   |   変換   |  BKSP   |
//                               |   LCTRL |   LWR   |  SHIFT  |         |   ALT   |   RSE   |         |
                        bindings = <
   &none   &kp EXCL  &kp LBKT    &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET  &kp EQUAL &kp PLUS  &kp UNDER  &kp LS(INT3)  &none
   &none   &kp STAR  &kp LPAR    &kp RBRC  &kp PIPE  &kp AT              &kp COLON  &kp DQT   &kp SEMI  &kp SQT    &kp INT3      &none
   &none   &kp LT    &kp GT      &kp RBKT  &kp BSLH  &kp AMPS            &kp MINUS  &kp FSLH  &kp COMMA &kp DOT    &kp LS(INT1)  &none
                                 &trans    &trans    &trans              &trans     &trans    &trans
                        >;
                };
                raise_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |         |    1    |    2    |    3    |    4    |    5    |         |    6    |    7    |    8    |    9    |    0    |      |
// |         |    F2   |    F4   |    F6   |    F7   |    F10  |         |   LFT   |   DWN   |   UP    |   RGT   |   : (') |      |
// |         |    F12  |         |         |         |         |         |   HOME  |   PGDN  |   PGUP  |   END   |    /    |      |
//                               |   TAB   |  無変換  |  SPACE  |         |   ENT   |   変換   |  BKSP   |
//                               |   LCTRL |   LWR   |  SHIFT  |         |   ALT   |   RSE   |         |
                        bindings = <
   &none   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5              &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &none
   &none   &kp F2    &kp F4    &kp F6    &kp F7    &kp F10             &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &kp SQT   &none
   &none   &kp F12   &none     &none     &none     &none               &kp HOME  &kp PG_DN &kp PG_UP &kp END   &kp FSLH  &none
                               &trans    &trans    &trans              &trans    &trans    &kp DEL
                        >;
                };
                adjust_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// |      |      ESC      |   BTCLR  |     BT     |     BT2    |    BT3   |       |     +   |    7    |    8    |    9    |  * (")  |      |
// |      |      CAD      |          |    C+F1    |    C+F2    |   C+F3   |       |     -   |    4    |    5    |    6    |    /    |      |
// |      |      CSE      |          |            |    WS+s    |   W+l    |       |   = (_) |    1    |    2    |    3    |    .    |      |
//                                   |    TAB     |    無変換   |   SPACE  |       |   ENT   |   変換   |    0    |
//                                   |    LCTRL   |     LWR    |   SHIFT  |       |   ALT   |   RSE   |         |
                        bindings = <
   &none   &kp ESC         &bt BT_CLR &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3       &kp PLUS     &kp N7    &kp N8    &kp N9    &kp DQT   &none
   &none   &kp LC(LA(DEL)) &none      &kp LC(F1)   &kp LC(F2)    &kp LC(F3)        &kp MINUS    &kp N4    &kp N5    &kp N6    &kp FSLH  &none
   &none   &kp LC(LS(ESC)) &none      &none        &kp LG(LS(S)) &kp LG(L)         &kp UNDER    &kp N1    &kp N2    &kp N3    &kp DOT   &none
                                      &trans       &trans        &trans            &mt LALT RET &trans &kp N0
                        >;
                };
        };
};
